/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package coursework;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author rijeshlopchan
 */
public class movieTheaterIS extends javax.swing.JFrame {

    /**
     * Creates new form design2
     */
    public movieTheaterIS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        searchPnl = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        priceTxtFld1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        searchComboBox = new javax.swing.JComboBox<>();
        searchGenre = new javax.swing.JButton();
        homePnl = new javax.swing.JPanel();
        customerNameTxtFld = new javax.swing.JTextField();
        movieNameTxtFld = new javax.swing.JTextField();
        customerID = new javax.swing.JLabel();
        customerName = new javax.swing.JLabel();
        priceTxtFld = new javax.swing.JTextField();
        movieGenre = new javax.swing.JLabel();
        movieName = new javax.swing.JLabel();
        hallNo = new javax.swing.JLabel();
        hall1Rbutton = new javax.swing.JRadioButton();
        hall2Rbutton = new javax.swing.JRadioButton();
        dimension = new javax.swing.JLabel();
        dimensionComboBox = new javax.swing.JComboBox<>();
        price = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        addToTableButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        customerTxtFld = new javax.swing.JTextField();
        movieGenreComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        importMenu = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        userManual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchPnl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Booking Information", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Grande", 1, 18))); // NOI18N

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1001", "Pratik Shrestha", "Pushpa", "Comedy", "Hall 2", "3D", "400"},
                {"1002", "Sarjan Lamichhane", "SpiderMan", "Action", "Hall 1", "2D", "200"},
                {"1003", "Aashutosh Kandel", "Spiderman", "Action", "Hall 1", "2D", "250"},
                {"1004", "Rijesh Lopchan", "Pushpa", "Comedy", "Hall 1", "2D", "390"},
                {"1005", "Anish Aryal", "Suryabansi", "Drama", "Hall 2", "2D", "250"},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Customer Name", "Movie Name", "Movie Genre", "Hall No", "Dimension", "Price"
            }
        ));
        jScrollPane1.setViewportView(dataTable);

        jLabel1.setText("Enter the price");

        jLabel3.setText("Search By:");

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        searchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Movie Genre--", "Action", "Comedy", "Drama", "Fantasy", "Horror", "Mystery", "Romance", "Thriller" }));
        searchComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchComboBoxActionPerformed(evt);
            }
        });

        searchGenre.setText("Search By Genre");
        searchGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchGenreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPnlLayout = new javax.swing.GroupLayout(searchPnl);
        searchPnl.setLayout(searchPnlLayout);
        searchPnlLayout.setHorizontalGroup(
            searchPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPnlLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPnlLayout.createSequentialGroup()
                        .addComponent(priceTxtFld1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchGenre)
                    .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(163, Short.MAX_VALUE))
            .addGroup(searchPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        searchPnlLayout.setVerticalGroup(
            searchPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(searchPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(priceTxtFld1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchGenre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        homePnl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customer Data", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Grande", 1, 18))); // NOI18N

        customerNameTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameTxtFldActionPerformed(evt);
            }
        });
        customerNameTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                customerNameTxtFldKeyTyped(evt);
            }
        });

        movieNameTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                movieNameTxtFldKeyTyped(evt);
            }
        });

        customerID.setText("Customer ID:");

        customerName.setText("Customer Name:");

        priceTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTxtFldActionPerformed(evt);
            }
        });
        priceTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceTxtFldKeyTyped(evt);
            }
        });

        movieGenre.setText("Movie Genre:");

        movieName.setText("Movie Name:");

        hallNo.setText("Hall No:");

        buttonGroup1.add(hall1Rbutton);
        hall1Rbutton.setText("Hall 1");

        buttonGroup1.add(hall2Rbutton);
        hall2Rbutton.setText("Hall 2");

        dimension.setText("Dimension:");

        dimensionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Dimension--", "2D", "3D", "4D", "8D", "10D" }));

        price.setText("Price:");

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));

        addToTableButton.setText("Add To Table");
        addToTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToTableButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        customerTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerTxtFldActionPerformed(evt);
            }
        });
        customerTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                customerTxtFldKeyTyped(evt);
            }
        });

        movieGenreComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Movie Genre--", "Action", "Comedy", "Drama", "Fantasy", "Horror", "Mystery", "Romance", "Thriller" }));

        javax.swing.GroupLayout homePnlLayout = new javax.swing.GroupLayout(homePnl);
        homePnl.setLayout(homePnlLayout);
        homePnlLayout.setHorizontalGroup(
            homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePnlLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(customerID)
                        .addComponent(hallNo, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(movieName)
                    .addComponent(price))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homePnlLayout.createSequentialGroup()
                        .addComponent(priceTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(267, 267, 267))
                    .addGroup(homePnlLayout.createSequentialGroup()
                        .addGroup(homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(homePnlLayout.createSequentialGroup()
                                .addComponent(customerTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(customerName)
                                .addGap(6, 6, 6)
                                .addComponent(customerNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(homePnlLayout.createSequentialGroup()
                                .addGroup(homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(movieNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(homePnlLayout.createSequentialGroup()
                                        .addComponent(hall1Rbutton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hall2Rbutton)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePnlLayout.createSequentialGroup()
                                        .addComponent(dimension)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dimensionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePnlLayout.createSequentialGroup()
                                        .addComponent(movieGenre)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(movieGenreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(10, 10, 10))))
            .addComponent(jSeparator1)
            .addGroup(homePnlLayout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(addToTableButton)
                .addGap(55, 55, 55)
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        homePnlLayout.setVerticalGroup(
            homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerID)
                    .addComponent(customerNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerName)
                    .addComponent(customerTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(movieName)
                    .addComponent(movieGenre)
                    .addComponent(movieGenreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hallNo)
                    .addComponent(hall1Rbutton)
                    .addComponent(hall2Rbutton)
                    .addComponent(dimension)
                    .addComponent(dimensionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(price))
                .addGap(59, 59, 59)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addToTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel4.setText("Movie Theater Booking Information System");

        fileMenu.setText("File");

        importMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        importMenu.setText("Import File");
        importMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importMenuActionPerformed(evt);
            }
        });
        fileMenu.add(importMenu);

        exitMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenu);

        mainMenuBar.add(fileMenu);

        jMenu1.setText("Help");

        userManual.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        userManual.setText("User Manual");
        userManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userManualActionPerformed(evt);
            }
        });
        jMenu1.add(userManual);

        mainMenuBar.add(jMenu1);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(homePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(9, 9, 9))
            .addGroup(layout.createSequentialGroup()
                .addGap(317, 317, 317)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(searchPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(homePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public ArrayList<String> selectionSort(ArrayList<String> list) {
        for (int i = 0; i < list.size(); i++) {
            int min = Integer.parseInt(list.get(i));
            int minPos = i;
            for (int j = i; j < list.size(); j++) {
                int temp = Integer.parseInt(list.get(j));
                if (temp < min) {
                    min = temp;
                    minPos = j;
                }
            }
            if (min < Integer.parseInt(list.get(i))) {
                String val = list.get(i);
                list.set(i, list.get(minPos));
                list.set(minPos, val);
            }
        }
        return list;
    }

    int binarySearch(ArrayList<String> arr, int left, int right, String price) {

        while (left <= right) {
            int middle = left + (right - left) / 2;

            // Check if price is present at middle
            if (arr.get(middle).equals(price)) {
                return middle;
            } // If priceis greater, ignore left half 
            else if (price.compareTo(arr.get((middle))) > 0) {
                left = middle + 1;
                binarySearch(arr,left, right, price);
            } else {
                right = middle - 1;
                binarySearch(arr, left, right, price);
            }
        }
        return -1;
    }
    int x, y;
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<String> name = new ArrayList();
        ArrayList<String> movie = new ArrayList();
        ArrayList<String> genre = new ArrayList();
        ArrayList<String> hall = new ArrayList();
        ArrayList<String> dimension = new ArrayList();
        ArrayList<String> price = new ArrayList();
        int row = dataTable.getRowCount();
        int rowIndex = 0;
        String s = "";
        String value = priceTxtFld1.getText();
        boolean rowEmpty = false;
        if (value.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "The text field is empty");
        } else {
            do {
                String customerName = (String) dataTable.getValueAt(rowIndex, 1);
                String movieName = (String) dataTable.getValueAt(rowIndex, 2);
                String movieGenre = (String) dataTable.getValueAt(rowIndex, 3);
                String hallNo = (String) dataTable.getValueAt(rowIndex, 4);
                String movieDimension = (String) dataTable.getValueAt(rowIndex, 5);
                String moviePrice = (String) dataTable.getValueAt(rowIndex, 6);

                if (moviePrice != null && moviePrice.length() != 0) {
                    name.add(customerName);
                    movie.add(movieName);
                    genre.add(movieGenre);
                    hall.add(hallNo);
                    dimension.add(movieDimension);
                    price.add(moviePrice);
                    rowIndex++;
                } else {
                    rowEmpty = true;
                }
            } while (rowIndex < row & rowEmpty == false);

            for (int i = 0; i < price.size(); i++) {
                if (price.get(i).equals(value)) {
                    x = i;
                    selectionSort(price);

                    break;
                }
            }
            int low = 0;
            int high = price.size()-1;
            int binarySearch = binarySearch(price, low, high, value);
            int y = binarySearch;
            if (binarySearch != -1) {
                JOptionPane.showMessageDialog(rootPane, "Value Found \n Name-->" + name.set(x, name.get(y)) + "\n Movie Name --->" + movie.set(x, movie.get(y)) + "\n Movie Genre --->" + genre.set(x, genre.get(y)) + "\n Hall No --->" + hall.set(x, hall.get(y)) + "\n Dimension --->" + dimension.set(x, dimension.get(y)) + "\n Price --->" + price.set(x, price.get(y)));
                priceTxtFld1.setText("");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Value Not Found");
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        customerTxtFld.setText("");
        customerNameTxtFld.setText("");
        movieNameTxtFld.setText("");
        priceTxtFld.setText("");
        movieGenreComboBox.setSelectedIndex(0);
        dimensionComboBox.setSelectedIndex(0);
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void addToTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToTableButtonActionPerformed
        // TODO add your handling code here:
        String id = customerTxtFld.getText();
        String customerName = customerNameTxtFld.getText();
        String movieName = movieNameTxtFld.getText();
        String price = priceTxtFld.getText();
        String movie = movieGenreComboBox.getSelectedItem().toString();
        String dimension = dimensionComboBox.getSelectedItem().toString();
        String hallNo = "";
        if (hall1Rbutton.isSelected()) {
            hallNo = hall1Rbutton.getText();
        } else if (hall2Rbutton.isSelected()) {
            hallNo = hall2Rbutton.getText();
        }
        String[] data = {id, customerName, movieName, movie, hallNo, dimension, price};
        int row = dataTable.getRowCount();
        int column = dataTable.getColumnCount();
        int rowIndex = 0;
        String s = "";
        boolean rowEmpty = false;
        if (id.isEmpty() || customerName.isEmpty() || movieName.isEmpty() || price.isEmpty() || movieGenreComboBox.getSelectedIndex() == 0 || dimensionComboBox.getSelectedIndex() == 0 || hallNo.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Please do not leave any textfield empty");
        } else {
            do {
                s = (String) dataTable.getValueAt(rowIndex, 0);
                if (s != null && s.length() != 0) {
                    rowIndex++;
                } else {
                    rowEmpty = true;
                }
            } while (rowIndex < row & rowEmpty == false);

            for (int i = 0; i < column; i++) {
                dataTable.setValueAt(data[i], rowIndex, i);
            }
            JOptionPane.showMessageDialog(rootPane, "Value Added");
            
        }
        
    }//GEN-LAST:event_addToTableButtonActionPerformed

    private void customerTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerTxtFldActionPerformed

    private void customerTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerTxtFldKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || (c == evt.VK_BACK_SPACE) || (c == evt.VK_DELETE) || (c == evt.VK_SPACE)) {
            customerTxtFld.setEditable(true);
        } else {
            customerTxtFld.setEditable(false);
        }
    }//GEN-LAST:event_customerTxtFldKeyTyped

    private void priceTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTxtFldActionPerformed

    private void priceTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTxtFldKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || (c == evt.VK_BACK_SPACE) || (c == evt.VK_DELETE)) {
            priceTxtFld.setEditable(true);
        } else {
            priceTxtFld.setEditable(false);
        }
    }//GEN-LAST:event_priceTxtFldKeyTyped

    private void customerNameTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameTxtFldActionPerformed

    private void customerNameTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerNameTxtFldKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c) || (c == evt.VK_BACK_SPACE) || (c == evt.VK_DELETE) || (c == evt.VK_SPACE)) {
            customerNameTxtFld.setEditable(true);
        } else {
            customerNameTxtFld.setEditable(false);
        }
    }//GEN-LAST:event_customerNameTxtFldKeyTyped

    private void searchComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchComboBoxActionPerformed

    private void searchGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchGenreActionPerformed
        // TODO add your handling code here:
        int x = 0;
        boolean value = false;
        ArrayList<String> genre = new ArrayList();
        int row = dataTable.getRowCount();
        int rowIndex = 0;
        boolean rowEmpty = false;
        String search = searchComboBox.getSelectedItem().toString();

        if (searchComboBox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Select any genre first");
        } else {
            do {
                String str = (String) dataTable.getValueAt(rowIndex, 0);
                if (str != null && str.length() != 0) {
                    rowIndex++;
                } else {
                    rowEmpty = true;
                }
            } while (rowIndex < row & rowEmpty == false);
            for (int i = 0; i < rowIndex; i++) {
                String choice = (String) dataTable.getValueAt(i, 3);
                genre.add(choice);
            }
            for (int i = 0; i < genre.size(); i++) {
                if (genre.get(i).equals(search)) {
                    x++;

                }
            }
            JOptionPane.showMessageDialog(rootPane, "The total number of " + search + " Movies =" + x);
        }

    }//GEN-LAST:event_searchGenreActionPerformed

    private void movieNameTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_movieNameTxtFldKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c) || (c == evt.VK_BACK_SPACE) || (c == evt.VK_DELETE) || (c == evt.VK_SPACE)) {
            movieNameTxtFld.setEditable(true);
        } else {
            movieNameTxtFld.setEditable(false);
        }
    }//GEN-LAST:event_movieNameTxtFldKeyTyped

    private void importMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importMenuActionPerformed
        // TODO add your handling code here:
        String path = System.getProperty("user.dir") + "/src/Coursework/import.txt";
        try {
            BufferedReader br = new BufferedReader(new FileReader(path));
            int nextRow = 5;
            boolean rowEmpty = false;
            String line = "";
            String value = "";
            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                do {
                    value = (String) dataTable.getValueAt(nextRow, 0);
                    if (value != null && value.length() != 0) {
                        nextRow++;
                    } else {
                        rowEmpty = true;
                    }
                } while (!rowEmpty);
                for (int j = 0; j < data.length; j++) {
                    dataTable.setValueAt(data[j], nextRow, j);
                }
            }
            JOptionPane.showMessageDialog(rootPane, "File Successfully Imported.", "Successfully Imported.", JOptionPane.INFORMATION_MESSAGE);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(movieTheaterIS.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "File not found.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(movieTheaterIS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_importMenuActionPerformed

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitMenuActionPerformed

    private void userManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userManualActionPerformed
        // TODO add your handling code here:
        String path = System.getProperty("user.dir") + "/src/Coursework/UserManual.pdf";
        Desktop d = Desktop.getDesktop();
        try{
            d.open(new java.io.File(path));
        }
        catch(IOException ex){
            Logger.getLogger(movieTheaterIS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_userManualActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(movieTheaterIS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(movieTheaterIS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(movieTheaterIS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(movieTheaterIS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new movieTheaterIS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToTableButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel customerID;
    private javax.swing.JLabel customerName;
    private javax.swing.JTextField customerNameTxtFld;
    private javax.swing.JTextField customerTxtFld;
    private javax.swing.JTable dataTable;
    private javax.swing.JLabel dimension;
    private javax.swing.JComboBox<String> dimensionComboBox;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JRadioButton hall1Rbutton;
    private javax.swing.JRadioButton hall2Rbutton;
    private javax.swing.JLabel hallNo;
    private javax.swing.JPanel homePnl;
    private javax.swing.JMenuItem importMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JLabel movieGenre;
    private javax.swing.JComboBox<String> movieGenreComboBox;
    private javax.swing.JLabel movieName;
    private javax.swing.JTextField movieNameTxtFld;
    private javax.swing.JLabel price;
    private javax.swing.JTextField priceTxtFld;
    private javax.swing.JTextField priceTxtFld1;
    private javax.swing.JButton searchBtn;
    private javax.swing.JComboBox<String> searchComboBox;
    private javax.swing.JButton searchGenre;
    private javax.swing.JPanel searchPnl;
    private javax.swing.JMenuItem userManual;
    // End of variables declaration//GEN-END:variables
}
